max(c.tree$cptable[,"CP"])
max(c.tree$cptable[2])
max(c.tree$cptable[1])
max(c.tree$cptable[0])
length(c.tree$cptable)
col(c.tree$cptable)
length(col(c.tree$cptable))
col(c.tree$cptable)
ncol(c.tree$cptable)
nrow(c.tree$cptable)
# Find the best cp:
pred.ct = predict(c.tree, valid.df, type = "class")
row.cp = seq(1,nrow(c.tree$cptable),1)
metrics.df3 <- data.frame(row.cp, sensitivity = rep(0, length(row.cp)), accuracy = rep(0, length(row.cp)))
for (i in 1:length(row.cp)){
set.seed(1)
pruned <- prune(c.tree, cp = c.tree$cptable[,"CP"][row.cp][i])
x <- predict(pruned, valid.df, type = "class", parms = list(prior= c(ratio_0, ratio_1)))
metrics.df3[i, 2] <- confusionMatrix(x, valid.df$stroke, positive = "1")$byClass[1]
metrics.df3[i, 3] <- confusionMatrix(x, valid.df$stroke, positive = "1")$overall[1]
}
# Find the best cp:
pred.ct = predict(c.tree, valid.df, type = "class")
row.cp = seq(1,nrow(c.tree$cptable),1)
metrics.df3 <- data.frame(row.cp, sensitivity = rep(0, length(row.cp)), accuracy = rep(0, length(row.cp)))
for (i in 1:length(row.cp)){
set.seed(1)
pruned <- prune(c.tree, cp = c.tree$cptable[,"CP"][row.cp][i])
x <- predict(pruned, valid.df, type = "class", parms = list(prior= c(ratio_0, ratio_1)))
metrics.df3[i, 2] <- confusionMatrix(x, valid.df$stroke, positive = "1")$byClass[1]
metrics.df3[i, 3] <- confusionMatrix(x, valid.df$stroke, positive = "1")$overall[1]
}
View(Stroke)
Stroke$stroke <- as.factor(Stroke$stroke)
# Find the best cp:
pred.ct = predict(c.tree, valid.df, type = "class")
row.cp = seq(1,nrow(c.tree$cptable),1)
metrics.df3 <- data.frame(row.cp, sensitivity = rep(0, length(row.cp)), accuracy = rep(0, length(row.cp)))
for (i in 1:length(row.cp)){
set.seed(1)
pruned <- prune(c.tree, cp = c.tree$cptable[,"CP"][row.cp][i])
x <- predict(pruned, valid.df, type = "class", parms = list(prior= c(ratio_0, ratio_1)))
metrics.df3[i, 2] <- confusionMatrix(x, valid.df$stroke, positive = "1")$byClass[1]
metrics.df3[i, 3] <- confusionMatrix(x, valid.df$stroke, positive = "1")$overall[1]
}
Stroke.dummy = Stroke
# Put work_type as dummy:
work_type_Dummies <- cbind(Stroke.dummy[1:5], dummy(Stroke.dummy$work_type, sep = "_"), Stroke.dummy[7:11])
names(work_type_Dummies)[6:10] <- c("children","Govt_job", "Never_Worked", "Private", "Self-employed")
work_type_Dummies
Stroke.dummy <- work_type_Dummies
# Put smoking_status as dummy:
smoking_status_Dummies <- cbind( Stroke.dummy[1:13], dummy(Stroke.dummy$smoking_status, sep = "_"), Stroke.dummy[15])
names(smoking_status_Dummies)[14:17] <- c("formerly_smoked", "never_smoked", "smokes", "unknown")
smoking_status_Dummies
Stroke.dummy <- smoking_status_Dummies
train.index = sample(NROW(Stroke.dummy), round(NROW(Stroke.dummy)*0.6))
train.df = Stroke.dummy[train.index,]
valid.df = Stroke.dummy[- train.index,]
# Full-grown tree:
set.seed(1)
c.tree = rpart(stroke ~., data = train.df, method = "class", cp=0, minbucket=1, minsplit = 1, xval =5, parms = list(prior= c(ratio_0, ratio_1)))
length(c.tree$frame$var[c.tree$frame$var == "<leaf>"])
c.tree$variable.importance
prp(c.tree)
# Find the best pruned tree:
set.seed(1)
printcp(c.tree)
prune_cp.index = which.min(c.tree$cptable[,"xerror"])
prune_cp = c.tree$cptable[prune_cp.index,"CP"]
prune_cp
p <- plotcp(c.tree)
p + abline(v = prune_cp.index, lty = "dashed")
# Pruned tree:
set.seed(1)
pruned.ct <- prune(c.tree, cp = prune_cp, parms = list(prior= c(ratio_0, ratio_1)))
length(pruned.ct$frame$var[pruned.ct$frame$var == "<leaf>"])
# Find the best cp:
pred.ct = predict(c.tree, valid.df, type = "class")
row.cp = seq(1,nrow(c.tree$cptable),1)
metrics.df3 <- data.frame(row.cp, sensitivity = rep(0, length(row.cp)), accuracy = rep(0, length(row.cp)))
for (i in 1:length(row.cp)){
set.seed(1)
pruned <- prune(c.tree, cp = c.tree$cptable[,"CP"][row.cp][i])
x <- predict(pruned, valid.df, type = "class", parms = list(prior= c(ratio_0, ratio_1)))
metrics.df3[i, 2] <- confusionMatrix(x, valid.df$stroke, positive = "1")$byClass[1]
metrics.df3[i, 3] <- confusionMatrix(x, valid.df$stroke, positive = "1")$overall[1]
}
cp.plot = ggplot(data= metrics.df3) + geom_line(aes(x=row.cp,y=sensitivity, color="Sensitivity")) + geom_line(aes(x=row.cp,y=accuracy, color = "Accuracy")) + geom_vline(xintercept = 0.001 , linetype="dashed") + theme_classic() + ggtitle("Sensitivity and Accuracy cp row")
cp.plot
metrics.df3$difference = sqrt((metrics.df3$accuracy - metrics.df3$sensitivity)^2)
row.cp.best = row.cp[which.min(metrics.df3$difference)]
cp.best = c.tree$cptable[,"CP"][row.cp][row.cp.best]
cp.best
set.seed(1)
best.pruned <- prune(c.tree, cp = cp.best)
pred.best.pruned <- predict(best.pruned, valid.df, type = "class", parms = list(prior= c(ratio_0, ratio_1)))
prp(best.pruned)
# Confusion matrix for CT:
confusionMatrix(pred.best.pruned, Valid$stroke, positive = "1")
fourfoldplot(confusionMatrix(pred.best.pruned, Valid$stroke, positive = "1")$table)
knitr::opts_chunk$set(echo = TRUE)
#clear all the console
list=ls()
rm(list=ls())
cat("\014")
ls()
Stroke <- read.csv(file.choose())
library(ggplot2)
library(FNN)
library(dummies)
library(e1071)
library (caret)
library(reshape2)
library(dplyr)
library(class)
library(naniar)
require(ellipse)
library(cowplot)
library(rpart)
library(rpart.plot)
library(MASS)
library(DiscriMiner)
# Types of variables:
str(Stroke)
# Changing N/A characters in bmi to real NA:
Stroke = replace_with_na(Stroke, replace = list(bmi = "N/A")) # bmi has NA now
# Change bmi from character to numerical variable:
Stroke$bmi <- as.numeric(Stroke$bmi)
Stroke$stroke <- as.factor(Stroke$stroke)
# Change character variables as categorical (factor)
Stroke[,c(2,6:8,11)] <- lapply(Stroke[,c(2,6:8,11)], as.factor)
# Remove id row
Stroke = Stroke[,-1]
str(Stroke)
# Show how many different values there is for each variable
sapply(Stroke, function(x) length(unique(x)))
summary(Stroke)
table(Stroke$stroke)
ratio_0 = 4861/(4861+249)
ratio_1 = 1 - ratio_0
ratio_0
ratio_1
# Visualize the data:
# gender:
ggplot(data = Stroke, aes(x = gender, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Gender vs Stroke")
# age:
ggplot(data = Stroke, aes(x = age, fill = stroke)) + geom_boxplot() + ggtitle("Age vs Stroke")
ggplot(data = Stroke, aes(x = age, fill = stroke)) + geom_histogram() + ggtitle("Age vs Stroke")
# hypertension:
ggplot(data = Stroke, aes(x = hypertension, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Hypertension vs Stroke")
# heart disease:
ggplot(data = Stroke, aes(x = heart_disease, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Heart disease vs Stroke")
# ever married:
ggplot(data = Stroke, aes(x = ever_married, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Ever married vs Stroke")
# work type:
ggplot(data = Stroke, aes(x = work_type, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Work type vs Stroke")
# Residence type:
ggplot(data = Stroke, aes(x = Residence_type, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Residence type vs Stroke")
# Average glucose level:
ggplot(data = Stroke, aes(x = avg_glucose_level, fill = stroke)) + geom_boxplot() + ggtitle("Average glucose level vs Stroke")
ggplot(data = Stroke, aes(x = avg_glucose_level, fill = stroke)) + geom_histogram() + ggtitle("Average glucose level vs Stroke")
# BMI:
ggplot(data = Stroke, aes(x = bmi, fill = stroke)) + geom_boxplot() + ggtitle("BMI vs Stroke")
ggplot(data = Stroke, aes(x = bmi, fill = stroke)) + geom_histogram() + ggtitle("BMI vs Stroke")
# Smoking status:
ggplot(data = Stroke, aes(x = smoking_status, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Smoking status vs Stroke")
# Visualize the data:
# gender:
ggplot(data = Stroke, aes(x = gender, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Gender vs Stroke") + geom_text(aes(label = ..count..), stat = "count", vjust = 1.5, colour = "white")
# age:
ggplot(data = Stroke, aes(x = age, fill = stroke)) + geom_boxplot() + ggtitle("Age vs Stroke")
ggplot(data = Stroke, aes(x = age, fill = stroke)) + geom_histogram() + ggtitle("Age vs Stroke")
# hypertension:
ggplot(data = Stroke, aes(x = hypertension, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Hypertension vs Stroke")
# heart disease:
ggplot(data = Stroke, aes(x = heart_disease, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Heart disease vs Stroke")
# ever married:
ggplot(data = Stroke, aes(x = ever_married, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Ever married vs Stroke")
# work type:
ggplot(data = Stroke, aes(x = work_type, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Work type vs Stroke")
# Residence type:
ggplot(data = Stroke, aes(x = Residence_type, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Residence type vs Stroke")
# Average glucose level:
ggplot(data = Stroke, aes(x = avg_glucose_level, fill = stroke)) + geom_boxplot() + ggtitle("Average glucose level vs Stroke")
ggplot(data = Stroke, aes(x = avg_glucose_level, fill = stroke)) + geom_histogram() + ggtitle("Average glucose level vs Stroke")
# BMI:
ggplot(data = Stroke, aes(x = bmi, fill = stroke)) + geom_boxplot() + ggtitle("BMI vs Stroke")
ggplot(data = Stroke, aes(x = bmi, fill = stroke)) + geom_histogram() + ggtitle("BMI vs Stroke")
# Smoking status:
ggplot(data = Stroke, aes(x = smoking_status, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Smoking status vs Stroke")
# Visualize the data:
# gender:
ggplot(data = Stroke, aes(x = gender, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Gender vs Stroke") + geom_text(aes(label = ..count..), stat = "count", vjust = 1)
# age:
ggplot(data = Stroke, aes(x = age, fill = stroke)) + geom_boxplot() + ggtitle("Age vs Stroke")
ggplot(data = Stroke, aes(x = age, fill = stroke)) + geom_histogram() + ggtitle("Age vs Stroke")
# hypertension:
ggplot(data = Stroke, aes(x = hypertension, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Hypertension vs Stroke")
# heart disease:
ggplot(data = Stroke, aes(x = heart_disease, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Heart disease vs Stroke")
# ever married:
ggplot(data = Stroke, aes(x = ever_married, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Ever married vs Stroke")
# work type:
ggplot(data = Stroke, aes(x = work_type, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Work type vs Stroke")
# Residence type:
ggplot(data = Stroke, aes(x = Residence_type, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Residence type vs Stroke")
# Average glucose level:
ggplot(data = Stroke, aes(x = avg_glucose_level, fill = stroke)) + geom_boxplot() + ggtitle("Average glucose level vs Stroke")
ggplot(data = Stroke, aes(x = avg_glucose_level, fill = stroke)) + geom_histogram() + ggtitle("Average glucose level vs Stroke")
# BMI:
ggplot(data = Stroke, aes(x = bmi, fill = stroke)) + geom_boxplot() + ggtitle("BMI vs Stroke")
ggplot(data = Stroke, aes(x = bmi, fill = stroke)) + geom_histogram() + ggtitle("BMI vs Stroke")
# Smoking status:
ggplot(data = Stroke, aes(x = smoking_status, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Smoking status vs Stroke")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
#clear all the console
list=ls()
rm(list=ls())
cat("\014")
ls()
Stroke <- read.csv(file.choose())
library(ggplot2)
library(FNN)
library(dummies)
library(e1071)
library (caret)
library(reshape2)
library(dplyr)
library(class)
library(naniar)
require(ellipse)
library(cowplot)
library(rpart)
library(rpart.plot)
library(MASS)
library(DiscriMiner)
# Types of variables:
str(Stroke)
# Changing N/A characters in bmi to real NA:
Stroke = replace_with_na(Stroke, replace = list(bmi = "N/A")) # bmi has NA now
# Change bmi from character to numerical variable:
Stroke$bmi <- as.numeric(Stroke$bmi)
Stroke$stroke <- as.factor(Stroke$stroke)
# Change character variables as categorical (factor)
Stroke[,c(2,6:8,11)] <- lapply(Stroke[,c(2,6:8,11)], as.factor)
# Remove id row
Stroke = Stroke[,-1]
str(Stroke)
# Show how many different values there is for each variable
sapply(Stroke, function(x) length(unique(x)))
summary(Stroke)
table(Stroke$stroke)
ratio_0 = 4861/(4861+249)
ratio_1 = 1 - ratio_0
ratio_0
ratio_1
knitr::opts_chunk$set(echo = TRUE)
#clear all the console
list=ls()
rm(list=ls())
cat("\014")
ls()
Stroke <- read.csv(file.choose())
library(ggplot2)
library(FNN)
library(dummies)
library(e1071)
library (caret)
library(reshape2)
library(dplyr)
library(class)
library(naniar)
require(ellipse)
library(cowplot)
library(rpart)
library(rpart.plot)
library(MASS)
library(DiscriMiner)
# Types of variables:
str(Stroke)
# Changing N/A characters in bmi to real NA:
Stroke = replace_with_na(Stroke, replace = list(bmi = "N/A")) # bmi has NA now
# Change bmi from character to numerical variable:
Stroke$bmi <- as.numeric(Stroke$bmi)
Stroke$stroke <- as.factor(Stroke$stroke)
# Change character variables as categorical (factor)
Stroke[,c(2,6:8,11)] <- lapply(Stroke[,c(2,6:8,11)], as.factor)
# Remove id row
Stroke = Stroke[,-1]
str(Stroke)
# Show how many different values there is for each variable
sapply(Stroke, function(x) length(unique(x)))
summary(Stroke)
table(Stroke$stroke)
ratio_0 = 4861/(4861+249)
ratio_1 = 1 - ratio_0
ratio_0
ratio_1
# Visualize the data:
# gender:
ggplot(data = Stroke, aes(x = gender, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Gender vs Stroke") + geom_text(aes(label = ..count..), stat = "count", vjust = 1)
# age:
ggplot(data = Stroke, aes(x = age, fill = stroke)) + geom_boxplot() + ggtitle("Age vs Stroke")
ggplot(data = Stroke, aes(x = age, fill = stroke)) + geom_histogram() + ggtitle("Age vs Stroke")
# hypertension:
ggplot(data = Stroke, aes(x = hypertension, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Hypertension vs Stroke")
# heart disease:
ggplot(data = Stroke, aes(x = heart_disease, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Heart disease vs Stroke")
# ever married:
ggplot(data = Stroke, aes(x = ever_married, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Ever married vs Stroke")
# work type:
ggplot(data = Stroke, aes(x = work_type, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Work type vs Stroke")
# Residence type:
ggplot(data = Stroke, aes(x = Residence_type, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Residence type vs Stroke")
# Average glucose level:
ggplot(data = Stroke, aes(x = avg_glucose_level, fill = stroke)) + geom_boxplot() + ggtitle("Average glucose level vs Stroke")
ggplot(data = Stroke, aes(x = avg_glucose_level, fill = stroke)) + geom_histogram() + ggtitle("Average glucose level vs Stroke")
# BMI:
ggplot(data = Stroke, aes(x = bmi, fill = stroke)) + geom_boxplot() + ggtitle("BMI vs Stroke")
ggplot(data = Stroke, aes(x = bmi, fill = stroke)) + geom_histogram() + ggtitle("BMI vs Stroke")
# Smoking status:
ggplot(data = Stroke, aes(x = smoking_status, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Smoking status vs Stroke")
# Visualize the data:
# gender:
ggplot(data = Stroke, aes(x = gender, fill = stroke, label = ..count..)) + geom_bar(position="dodge") + ggtitle("Gender vs Stroke")
# age:
ggplot(data = Stroke, aes(x = age, fill = stroke)) + geom_boxplot() + ggtitle("Age vs Stroke")
ggplot(data = Stroke, aes(x = age, fill = stroke)) + geom_histogram() + ggtitle("Age vs Stroke")
# hypertension:
ggplot(data = Stroke, aes(x = hypertension, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Hypertension vs Stroke")
# heart disease:
ggplot(data = Stroke, aes(x = heart_disease, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Heart disease vs Stroke")
# ever married:
ggplot(data = Stroke, aes(x = ever_married, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Ever married vs Stroke")
# work type:
ggplot(data = Stroke, aes(x = work_type, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Work type vs Stroke")
# Residence type:
ggplot(data = Stroke, aes(x = Residence_type, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Residence type vs Stroke")
# Average glucose level:
ggplot(data = Stroke, aes(x = avg_glucose_level, fill = stroke)) + geom_boxplot() + ggtitle("Average glucose level vs Stroke")
ggplot(data = Stroke, aes(x = avg_glucose_level, fill = stroke)) + geom_histogram() + ggtitle("Average glucose level vs Stroke")
# BMI:
ggplot(data = Stroke, aes(x = bmi, fill = stroke)) + geom_boxplot() + ggtitle("BMI vs Stroke")
ggplot(data = Stroke, aes(x = bmi, fill = stroke)) + geom_histogram() + ggtitle("BMI vs Stroke")
# Smoking status:
ggplot(data = Stroke, aes(x = smoking_status, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Smoking status vs Stroke")
# Visualize the data:
# gender:
ggplot(data = Stroke, aes(x = gender, fill = stroke, label = ..count..)) + geom_bar(position="dodge") + ggtitle("Gender vs Stroke") + geom_text(aes(label = ..count..), stat = "count", vjust = 1)
# Visualize the data:
# gender:
ggplot(data = Stroke, aes(x = gender, fill = stroke, text = ..count..)) + geom_bar(position="dodge") + ggtitle("Gender vs Stroke") + geom_text(aes(label = ..count..), stat = "count", vjust = 1)
# Visualize the data:
# gender:
ggplot(data = Stroke, aes(x = gender, fill = stroke, text = ..count..)) + geom_bar(position="dodge") + ggtitle("Gender vs Stroke")
#+ geom_text(aes(label = ..count..), stat = "count", vjust = 1)
# Visualize the data:
# gender:
ggplot(data = Stroke, aes(x = gender, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Gender vs Stroke") + geom_text(aes(label = ..count..), stat = "count", vjust = 1)
?geom_text
# Visualize the data:
# gender:
ggplot(data = Stroke, aes(x = gender, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Gender vs Stroke") + geom_text(aes(label = ..count..), size = 3, vjust = 1.5, position = position_dodge(.9))
# Visualize the data:
# gender:
ggplot(data = Stroke, aes(x = gender, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Gender vs Stroke") + geom_text(aes(label = ..count..), stat = "count", size = 3, vjust = 1.5, position = position_dodge(.9))
# Visualize the data:
# gender:
ggplot(data = Stroke, aes(x = gender, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Gender vs Stroke") + geom_text(aes(label = ..count..), stat = "count", size = 3, vjust = 2, position = position_dodge(.9))
# Visualize the data:
# gender:
ggplot(data = Stroke, aes(x = gender, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Gender vs Stroke") + geom_text(aes(label = ..count..), stat = "count", size = 3, vjust = -2 , position = position_dodge(.9))
# Visualize the data:
# gender:
ggplot(data = Stroke, aes(x = gender, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Gender vs Stroke") + geom_text(aes(label = ..count..), stat = "count", size = 3, vjust = -1.5, position = position_dodge(.9))
# Visualize the data:
# gender:
ggplot(data = Stroke, aes(x = gender, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Gender vs Stroke") + geom_text(aes(label = ..count..), stat = "count", size = 3, vjust = -1, position = position_dodge(.9))
# Visualize the data:
# gender:
ggplot(data = Stroke, aes(x = gender, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Gender vs Stroke") + geom_text(aes(label = ..count..), stat = "count", size = 3, vjust = -0.5, position = position_dodge(.9))
# Visualize the data:
# gender:
ggplot(data = Stroke, aes(x = gender, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Gender vs Stroke") + geom_text(aes(label = ..count..), stat = "count", size = 3, vjust = -0.3, position = position_dodge(.9))
# Visualize the data:
# gender:
ggplot(data = Stroke, aes(x = gender, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Gender vs Stroke") + geom_text(aes(label = ..count..), stat = "count", colour = "white", size = 3, vjust = -0.3, position = position_dodge(.9))
# Visualize the data:
# gender:
ggplot(data = Stroke, aes(x = gender, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Gender vs Stroke") + geom_text(aes(label = ..count..), stat = "count", colour = "grey", size = 3, vjust = -0.3, position = position_dodge(.9))
# Visualize the data:
# gender:
ggplot(data = Stroke, aes(x = gender, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Gender vs Stroke") + geom_text(aes(label = ..count..), stat = "count", colour = "dark grey", size = 3, vjust = -0.3, position = position_dodge(.9))
# Visualize the data:
# gender:
ggplot(data = Stroke, aes(x = gender, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Gender vs Stroke") + geom_text(aes(label = ..count..), stat = "count", colour = "dark dark grey", size = 3, vjust = -0.3, position = position_dodge(.9))
# Visualize the data:
# gender:
ggplot(data = Stroke, aes(x = gender, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Gender vs Stroke") + geom_text(aes(label = ..count..), stat = "count", colour = "dark grey", size = 3, vjust = -0.3, position = position_dodge(.9))
# Visualize the data:
# gender:
ggplot(data = Stroke, aes(x = gender, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Gender vs Stroke") + geom_text(aes(label = ..count..), stat = "count", colour = "grey8", size = 3, vjust = -0.3, position = position_dodge(.9))
# Visualize the data:
# gender:
ggplot(data = Stroke, aes(x = gender, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Gender vs Stroke") + geom_text(aes(label = ..count..), stat = "count", colour = "grey15", size = 3, vjust = -0.3, position = position_dodge(.9))
# Visualize the data:
# gender:
ggplot(data = Stroke, aes(x = gender, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Gender vs Stroke") + geom_text(aes(label = ..count..), stat = "count", colour = "grey30", size = 3, vjust = -0.3, position = position_dodge(.9))
# Visualize the data:
# gender:
ggplot(data = Stroke, aes(x = gender, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Gender vs Stroke") + geom_text(aes(label = ..count..), stat = "count", colour = "grey50", size = 3, vjust = -0.3, position = position_dodge(.9))
# Visualize the data:
# gender:
ggplot(data = Stroke, aes(x = gender, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Gender vs Stroke") + geom_text(aes(label = ..count..), stat = "count", colour = "grey40", size = 3, vjust = -0.3, position = position_dodge(.9))
# Visualize the data:
# gender:
ggplot(data = Stroke, aes(x = gender, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Gender vs Stroke") + geom_text(aes(label = ..count..), stat = "count", colour = "grey30", size = 3, vjust = -0.3, position = position_dodge(.9))
# Visualize the data:
# gender:
ggplot(data = Stroke, aes(x = gender, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Gender vs Stroke") + geom_text(aes(label = ..count..), stat = "count", colour = "grey38", size = 3, vjust = -0.3, position = position_dodge(.9))
# Visualize the data:
# gender:
ggplot(data = Stroke, aes(x = gender, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Gender vs Stroke") + geom_text(aes(label = ..count..), stat = "count", colour = "grey38", size = 3, vjust = -0.3, position = position_dodge(.9))
# age:
ggplot(data = Stroke, aes(x = age, fill = stroke)) + geom_boxplot() + ggtitle("Age vs Stroke")
ggplot(data = Stroke, aes(x = age, fill = stroke)) + geom_histogram() + ggtitle("Age vs Stroke")
# hypertension:
ggplot(data = Stroke, aes(x = hypertension, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Hypertension vs Stroke") + geom_text(aes(label = ..count..), stat = "count", colour = "grey38", size = 3, vjust = -0.3, position = position_dodge(.9))
# heart disease:
ggplot(data = Stroke, aes(x = heart_disease, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Heart disease vs Stroke") + geom_text(aes(label = ..count..), stat = "count", colour = "grey38", size = 3, vjust = -0.3, position = position_dodge(.9))
# ever married:
ggplot(data = Stroke, aes(x = ever_married, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Ever married vs Stroke") + geom_text(aes(label = ..count..), stat = "count", colour = "grey38", size = 3, vjust = -0.3, position = position_dodge(.9))
# work type:
ggplot(data = Stroke, aes(x = work_type, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Work type vs Stroke") + geom_text(aes(label = ..count..), stat = "count", colour = "grey38", size = 3, vjust = -0.3, position = position_dodge(.9))
# Residence type:
ggplot(data = Stroke, aes(x = Residence_type, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Residence type vs Stroke") + geom_text(aes(label = ..count..), stat = "count", colour = "grey38", size = 3, vjust = -0.3, position = position_dodge(.9))
# Average glucose level:
ggplot(data = Stroke, aes(x = avg_glucose_level, fill = stroke)) + geom_boxplot() + ggtitle("Average glucose level vs Stroke")
ggplot(data = Stroke, aes(x = avg_glucose_level, fill = stroke)) + geom_histogram() + ggtitle("Average glucose level vs Stroke")
# BMI:
ggplot(data = Stroke, aes(x = bmi, fill = stroke)) + geom_boxplot() + ggtitle("BMI vs Stroke")
ggplot(data = Stroke, aes(x = bmi, fill = stroke)) + geom_histogram() + ggtitle("BMI vs Stroke")
# Smoking status:
ggplot(data = Stroke, aes(x = smoking_status, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Smoking status vs Stroke") + geom_text(aes(label = ..count..), stat = "count", colour = "grey38", size = 3, vjust = -0.3, position = position_dodge(.9))
# Visualize the data:
# gender:
ggplot(data = Stroke, aes(x = gender, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Gender vs Stroke") + geom_text(aes(label = ..count..), stat = "count", colour = "grey38", size = 3, vjust = -0.3, position = position_dodge(.9))
# age:
ggplot(data = Stroke, aes(x = age, fill = stroke)) + geom_boxplot() + ggtitle("Age vs Stroke")
ggplot(data = Stroke, aes(x = age, fill = stroke)) + geom_histogram() + ggtitle("Age vs Stroke")
# hypertension:
ggplot(data = Stroke, aes(x = hypertension, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Hypertension vs Stroke") + geom_text(aes(label = ..count..), stat = "count", colour = "grey38", size = 3, vjust = -0.3, position = position_dodge(.9))
# heart disease:
ggplot(data = Stroke, aes(x = heart_disease, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Heart disease vs Stroke") + geom_text(aes(label = ..count..), stat = "count", colour = "grey38", size = 3, vjust = -0.3, position = position_dodge(.9))
# ever married:
ggplot(data = Stroke, aes(x = ever_married, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Ever married vs Stroke") + geom_text(aes(label = ..count..), stat = "count", colour = "grey38", size = 3, vjust = -0.3, position = position_dodge(.9))
# work type:
ggplot(data = Stroke, aes(x = work_type, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Work type vs Stroke") + geom_text(aes(label = ..count..), stat = "count", colour = "grey38", size = 3, vjust = -0.3, position = position_dodge(.9))
# Residence type:
ggplot(data = Stroke, aes(x = Residence_type, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Residence type vs Stroke") + geom_text(aes(label = ..count..), stat = "count", colour = "grey38", size = 3, vjust = -0.3, position = position_dodge(.9))
# Average glucose level:
ggplot(data = Stroke, aes(x = avg_glucose_level, fill = stroke)) + geom_boxplot() + ggtitle("Average glucose level vs Stroke")
ggplot(data = Stroke, aes(x = avg_glucose_level, fill = stroke)) + geom_histogram() + ggtitle("Average glucose level vs Stroke")
# BMI:
ggplot(data = Stroke, aes(x = bmi, fill = stroke)) + geom_boxplot() + ggtitle("BMI vs Stroke")
ggplot(data = Stroke, aes(x = bmi, fill = stroke)) + geom_histogram() + ggtitle("BMI vs Stroke")
# Smoking status:
ggplot(data = Stroke, aes(x = smoking_status, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Smoking status vs Stroke") + geom_text(aes(label = ..count..), stat = "count", colour = "grey38", size = 3, vjust = -0.3, position = position_dodge(.9))
# Visualize the data:
# gender:
ggplot(data = Stroke, aes(x = gender, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Gender vs Stroke") + geom_text(aes(label = ..count..), stat = "count", colour = "grey38", size = 3, vjust = -0.3, position = position_dodge(.9))
count(gender)
count(Stroke$gender)
# Visualize the data:
# gender:
ggplot(data = Stroke, aes(x = gender, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Gender vs Stroke") + geom_text(aes(label = ..count..), stat = "count", colour = "grey38", size = 3, vjust = -0.3, position = position_dodge(.9))
..percent..
# Visualize the data:
# gender:
ggplot(data = Stroke, aes(x = gender, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Gender vs Stroke") + geom_text(aes(label = ..percent..), stat = "percent", colour = "grey38", size = 3, vjust = -0.3, position = position_dodge(.9))
# Visualize the data:
# gender:
ggplot(data = Stroke, aes(x = gender, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Gender vs Stroke") + geom_text(aes(label = ..count..), stat = "count", colour = "grey38", size = 3, vjust = -0.3, position = position_dodge(.9))
# Visualize the data:
# gender:
ggplot(data = Stroke, aes(x = gender, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Gender vs Stroke") + geom_text(aes(label = ..count..), stat = "count", colour = "grey38", size = 3, vjust = -0.3, position = position_dodge(.9))
# Visualize the data:
# gender:
ggplot(data = Stroke, aes(x = gender, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Gender vs Stroke") + geom_text(aes(label = ..count..), stat = "count", colour = "grey38", size = 3, vjust = -0.3, position = position_dodge(.9))
# age:
ggplot(data = Stroke, aes(x = age, fill = stroke)) + geom_boxplot() + ggtitle("Age vs Stroke")
ggplot(data = Stroke, aes(x = age, fill = stroke)) + geom_histogram() + ggtitle("Age vs Stroke")
# hypertension:
ggplot(data = Stroke, aes(x = hypertension, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Hypertension vs Stroke") + geom_text(aes(label = ..count..), stat = "count", colour = "grey38", size = 3, vjust = -0.3, position = position_dodge(.9))
# heart disease:
ggplot(data = Stroke, aes(x = heart_disease, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Heart disease vs Stroke") + geom_text(aes(label = ..count..), stat = "count", colour = "grey38", size = 3, vjust = -0.3, position = position_dodge(.9))
# ever married:
ggplot(data = Stroke, aes(x = ever_married, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Ever married vs Stroke") + geom_text(aes(label = ..count..), stat = "count", colour = "grey38", size = 3, vjust = -0.3, position = position_dodge(.9))
# work type:
ggplot(data = Stroke, aes(x = work_type, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Work type vs Stroke") + geom_text(aes(label = ..count..), stat = "count", colour = "grey38", size = 3, vjust = -0.3, position = position_dodge(.9))
# Residence type:
ggplot(data = Stroke, aes(x = Residence_type, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Residence type vs Stroke") + geom_text(aes(label = ..count..), stat = "count", colour = "grey38", size = 3, vjust = -0.3, position = position_dodge(.9))
# Average glucose level:
ggplot(data = Stroke, aes(x = avg_glucose_level, fill = stroke)) + geom_boxplot() + ggtitle("Average glucose level vs Stroke")
ggplot(data = Stroke, aes(x = avg_glucose_level, fill = stroke)) + geom_histogram() + ggtitle("Average glucose level vs Stroke")
# BMI:
ggplot(data = Stroke, aes(x = bmi, fill = stroke)) + geom_boxplot() + ggtitle("BMI vs Stroke")
ggplot(data = Stroke, aes(x = bmi, fill = stroke)) + geom_histogram() + ggtitle("BMI vs Stroke")
# Smoking status:
ggplot(data = Stroke, aes(x = smoking_status, fill = stroke)) + geom_bar(position="dodge") + ggtitle("Smoking status vs Stroke") + geom_text(aes(label = ..count..), stat = "count", colour = "grey38", size = 3, vjust = -0.3, position = position_dodge(.9))
